
# LogSplitter Controller - Header Files

This directory contains all header files (.h) for the LogSplitter Controller project.

## Core System Headers

### Safety & Control
- `safety_system.h` - Emergency stop, over-pressure protection, system health monitoring
- `system_error_manager.h` - Error reporting, acknowledgment, and LED status indication
- `sequence_controller.h` - Hydraulic cylinder sequence state machine (extend/retract)
- `relay_controller.h` - Hardware relay control via Serial1 interface

### Sensors & Input
- `pressure_manager.h` - Dual pressure sensor management (A1 hydraulic, A5 filter)
- `pressure_sensor.h` - Individual pressure sensor with filtering and calibration
- `input_manager.h` - Digital input debouncing and pin state monitoring

### Communication & Configuration
- `network_manager.h` - WiFi/MQTT connectivity with automatic hostname and syslog support
- `telnet_server.h` - Telnet server for remote command access
- `command_processor.h` - Command validation, parsing, and execution
- `config_manager.h` - EEPROM configuration persistence and validation

### Testing & Constants
- `system_test_suite.h` - Comprehensive hardware validation framework
- `constants.h` - System constants, pin definitions, and configuration parameters
- `arduino_secrets.h` - WiFi/MQTT credentials (user-created from template)

## Header File Usage

Include headers in your source files with:

```cpp
#include "header_name.h"
```

All headers use include guards to prevent multiple inclusion and are compatible with the Arduino framework and PlatformIO build system.

## Configuration

### WiFi/MQTT Credentials
Create `arduino_secrets.h` from the provided template:
```bash
cp arduino_secrets.h.template arduino_secrets.h
```

Then edit with your network credentials. This file is excluded from version control.

### System Configuration
Modify `constants.h` to adjust:
- Pin assignments and hardware configuration
- Pressure sensor ranges and calibration
- Network timeouts and retry limits
- Safety thresholds and timing parameters
- MQTT topics and syslog server settings

## Memory Usage

All constants are stored in PROGMEM (flash memory) when possible to conserve RAM. Current memory usage:
- **RAM**: 34.5% (11,308 bytes)
- **Flash**: 43.3% (113,432 bytes)

---

**Note**: Headers should contain declarations only. Implementation goes in corresponding .cpp files in the src/ directory.
